<?xml version="1.0" encoding="utf-8"?>

<resources>
	<!-- Base application theme is the default theme. -->
	<style name="Theme" parent="android:Theme">
	</style>

	<!--
		Variation on our application theme that forces a plain text style.
	-->
	<style name="Theme.PlainText">
		<item name="android:textAppearance">@style/TextAppearance.Theme.PlainText
		</item>
	</style>

	<!--
		Variation on our application theme that has a black background.
	-->


	<!--
		A theme for a custom dialog appearance. Here we use an ugly custom
		frame.
	-->

	<!--
		A theme that has a translucent background. Here we explicitly specify
		that this theme is to inherit from the system's translucent theme,
		which sets up various attributes correctly..
	-->
	<style name="Theme.Translucent" parent="android:style/Theme.Translucent">
		<item name="android:windowBackground">@drawable/translucent_background
		</item>
		<item name="android:windowNoTitle">false</item>
		<item name="android:colorForeground">#fff</item>
	</style>

	<!--
		Variation on our application theme that has a transparent background;
		this example completely removes the background, allowing the activity
		to decide how to composite. Also here we force the translucency
		ourself rather than making use of the built-in translucent theme.
	-->
	<style name="Theme.Transparent">
		<item name="android:windowIsTranslucent">true</item>
		<item name="android:windowAnimationStyle">@android:style/Animation.Translucent
		</item>

		<item name="android:windowNoTitle">true</item>
		<item name="android:colorForeground">#ff0</item>
	</style>

	<style name="TextAppearance.Theme.PlainText" parent="android:TextAppearance.Theme">
		<item name="android:textStyle">normal</item>
	</style>

</resources>
